from pymtl import *
from bitutil import bit_enum

# As we implement more, uncomment below
uops = (
  'LUI',
  'AUIPC',
  'JAL',
  'JALR',
  'BEQ',
  'BNE',
  'BLT',
  'BGE',
  'BLTU',
  'BGEU',
  'LB',
  'LH',
  'LW',
  'LBU',
  'LHU',
  'SB',
  'SH',
  'SW',
  'ADDI',
  'SLTI',
  'SLTIU',
  'XORI',
  'ORI',
  'ANDI',
  'SLLI',
  'SRLI',
  'SRAI',
  'ADD',
  'SUB',
  'SLL',
  'SLT',
  'SLTU',
  'XOR',
  'SRL',
  'SRA',
  'OR',
  'AND',
  'FENCE',
  'FENCE_I',
  'ECALL',
  'EBREAK',
  'CSRRW',
  'CSRRS',
  'CSRRC',
  'CSRRWI',
  'CSRRSI',
  'CSRRCI',
  # RV64I Base Instruction Set (in addition to RV32I)
  'LWU',
  'LD',
  'SD',
  'SLLI',
  'SRLI',
  'SRAI',
  'ADDIW',
  'SLLIW',
  'SRLIW',
  'SRAIW',
  'ADDW',
  'SUBW',
  'SLLW',
  'SRLW',
  'SRAW',
  # RV32M Standard Extension
  'MUL',
  'MULH',
  'MULHSU',
  'MULHU',
  'DIV',
  'DIVU',
  'REM',
  'REMU',
  # RV64M Standard Extension (in addition to RV32M)
  'MULW',
  'DIVW',
  'DIVUW',
  'REMW',
  'REMUW',
  # # RV32A Standard Extension
  # 'LR.W',
  # 'SC.W',
  # 'AMOSWAP.W',
  # 'AMOADD.W',
  # 'AMOXOR.W',
  # 'AMOAND.W',
  # 'AMOOR.W',
  # 'AMOMIN.W',
  # 'AMOMAX.W',
  # 'AMOMINU.W',
  # 'AMOMAXU.W',
  # # RV64A Standard Extension (in addition to RV32A)
  # 'LR.D',
  # 'SC.D',
  # 'AMOSWAP.D',
  # 'AMOADD.D',
  # 'AMOXOR.D',
  # 'AMOAND.D',
  # 'AMOOR.D',
  # 'AMOMIN.D',
  # 'AMOMAX.D',
  # 'AMOMINU.D',
  # 'AMOMAXU.D',
  # # RV32F Standard Extension
  # 'FLW',
  # 'FSW',
  # 'FMADD.S',
  # 'FMSUB.S',
  # 'FNMSUB.S',
  # 'FNMADD.S',
  # 'FADD.S',
  # 'FSUB.S',
  # 'FMUL.S',
  # 'FDIV.S',
  # 'FSQRT.S',
  # 'FSGNJ.S',
  # 'FSGNJN.S',
  # 'FSGNJX.S',
  # 'FMIN.S',
  # 'FMAX.S',
  # 'FCVT.W.S',
  # 'FCVT.WU.S',
  # 'FMV.X.W',
  # 'FEQ.S',
  # 'FLT.S',
  # 'FLE.S',
  # 'FCLASS.S',
  # 'FCVT.S.W',
  # 'FCVT.S.WU',
  # 'FMV.W.X',
  # # RV64F Standard Extension (in addition to RV32F)
  # 'FCVT.L.S',
  # 'FCVT.LU.S',
  # 'FCVT.S.L',
  # 'FCVT.S.LU',
  # # RV32D Standard Extension
  # 'FLD',
  # 'FSD',
  # 'FMADD.D',
  # 'FMSUB.D',
  # 'FNMSUB.D',
  # 'FNMADD.D',
  # 'FADD.D',
  # 'FSUB.D',
  # 'FMUL.D',
  # 'FDIV.D',
  # 'FSQRT.D',
  # 'FSGNJ.D',
  # 'FSGNJN.D',
  # 'FSGNJX.D',
  # 'FMIN.D',
  # 'FMAX.D',
  # 'FCVT.S.D',
  # 'FCVT.D.S',
  # 'FEQ.D',
  # 'FLT.D',
  # 'FLE.D',
  # 'FCLASS.D',
  # 'FCVT.W.D',
  # 'FCVT.WU.D',
  # 'FCVT.D.W',
  # 'FCVT.D.WU',
  # # RV64D Standard Extension (in addition to RV32D)
  # 'FCVT.L.D',
  # 'FCVT.LU.D',
  # 'FMV.X.D',
  # 'FCVT.D.L',
  # 'FCVT.D.LU',
  # 'FMV.D.X',
  )

# PYMTL_BROKEN: pymtl does not name mangle names, so this conflicts with the RV64 insts
MicroOp = bit_enum('MicroOp', None,*tuple(['UOP_' + u for u in uops]))
